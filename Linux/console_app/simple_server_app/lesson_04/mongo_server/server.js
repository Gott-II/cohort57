const express = require("express");
const { MongoClient } = require("mongodb");

const app = express();
const PORT = 3000;

app.use(express.json());

const mongoUrl = "mongodb://root:password@localhost:27017";

let db;
let animalsCollection;

async function start() {
    const client = new MongoClient(mongoUrl);
    try {
        await client.connect();
        console.log("‚úÖ Erfolgreich mit MongoDB verbunden");

        db = client.db("zoo_db");
        animalsCollection = db.collection("animals");

        // Alle Tiere abrufen
        app.get("/", async (req, res) => {
            try {
                const animals = await animalsCollection.find().toArray();
                res.json(animals);
            } catch (err) {
                console.error("Fehler beim Abrufen:", err);
                res.status(500).send("Fehler beim Abrufen der Tiere");
            }
        });

        // Gewicht aller Tiere um 2 % erh√∂hen
        app.put("/increase-weight", async (req, res) => {
            try {
                const result = await animalsCollection.updateMany(
                    {},
                    [
                        {
                            $set: {
                                weight: { $multiply: ["$weight", 1.02] }
                            }
                        }
                    ]
                );
                res.json({
                    message: "Gewicht aller Tiere wurde um 2‚ÄØ% erh√∂ht",
                    modifiedCount: result.modifiedCount
                });
            } catch (err) {
                console.error("Fehler beim Aktualisieren:", err);
                res.status(500).send("Fehler beim Erh√∂hen des Gewichts");
            }
        });

        app.listen(PORT, () => {
            console.log(`üöÄ Server l√§uft unter http://localhost:${PORT}`);
        });
    } catch (error) {
        console.error("‚ùå Fehler bei der Verbindung zur Datenbank:", error);
    }
}

start();


// npm i - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫
// npm start - –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
// ctrl + c - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ


// npm init -y - —Å–æ–∑–¥–∞—Ç—å package.json
// npm i express mongodb - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫–∏

